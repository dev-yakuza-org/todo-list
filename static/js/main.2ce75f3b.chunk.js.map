{"version":3,"sources":["Components/PageHeader/index.tsx","Components/Button/index.tsx","Pages/List/index.tsx","Pages/Add/index.tsx","Pages/Detail/index.tsx","Pages/NotFound/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Container","Styled","div","Title","GoBack","Link","PageHeader","pathname","useLocation","title","startsWith","to","props","backgroundColor","hoverColor","Label","Button","label","onClick","ToDoItem","ToDoList","AddButton","List","useState","toDoList","setToDoList","useEffect","list","localStorage","getItem","JSON","parse","map","todo","index","splice","setItem","stringify","onDelete","Input","input","Add","toDo","setToDo","replace","useHistory","placeholder","onChange","e","target","value","ToDo","Detail","id","useParams","undefined","Number","parseInt","NotFound","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.2ce75f3b.chunk.js","sourcesContent":["import React from 'react';\nimport Styled from 'styled-components';\nimport { useLocation, Link } from 'react-router-dom';\n\nconst Container = Styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #1E40FF;\n`;\nconst Title = Styled.div`\n  padding: 20px;\n  color: #FFFFFF;\n  font-size: 20px;\n  font-weight: 600;\n`;\nconst GoBack = Styled(Link)`\n  padding: 20px;\n  color: #FFFFFF;\n  font-size: 16px;\n  font-weight: 600;\n  text-decoration: none;\n  position: absolute;\n  left: 20px;\n`;\n\nexport const PageHeader = () => {\n  const { pathname } = useLocation();\n  let title = '에러';\n\n  if (pathname === '/') {\n    title = '할 일 목록';\n  } else if (pathname === '/add') {\n    title = '할 일 추가';\n  } else if (pathname.startsWith('/detail')) {\n    title = '할 일 상세';\n  }\n\n  return (\n    <Container>\n      <Title>{title}</Title>\n      {pathname !== '/' && <GoBack to=\"/\">돌아가기</GoBack>}\n    </Container>\n  );\n};\n","import React from 'react';\nimport Styled from 'styled-components';\n\ninterface ContainerProps {\n  readonly backgroundColor: string;\n  readonly hoverColor: string;\n}\n\nconst Container = Styled.div<ContainerProps>`\n  text-align: center;\n  padding: 10px 20px;\n  border-radius: 8px;\n  cursor: pointer;\n  background-color: ${(props) => props.backgroundColor};\n  &:hover {\n    background-color: ${(props) => props.hoverColor};\n  }\n  &:active {\n    box-shadow: inset 5px 5px 10px rgba(0, 0, 0, 0.2);\n  }\n`;\nconst Label = Styled.div`\n  color: #FFFFFF;\n  font-size: 16px;\n`;\n\ninterface Props {\n  readonly label: string;\n  readonly backgroundColor?: string;\n  readonly hoverColor?: string;\n  readonly onClick?: () => void;\n}\n\nexport const Button = ({\n  label,\n  backgroundColor = '#304FFE',\n  hoverColor = '#1E40FF',\n  onClick,\n}: Props) => {\n  return (\n    <Container backgroundColor={backgroundColor} hoverColor={hoverColor} onClick={onClick}>\n      <Label>{label}</Label>\n    </Container>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport Styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport { Button } from 'Components';\n\nconst Container = Styled.div`\n  display: flex;\n  background-color: #FFFFFF;\n  flex-direction: column;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.2);\n  position: relative;\n  align-items: center;\n`;\nconst ToDoItem = Styled.div`\n  display: flex;\n  border-bottom: 1px solid #BDBDBD;\n  align-items: center;\n  margin: 10px;\n  padding: 10px;\n`;\nconst Label = Styled(Link)`\n  flex: 1;\n  font-size: 16px;\n  margin-right: 20px;\n  text-decoration: none;\n`;\nconst ToDoList = Styled.div`\n  min-width: 350px;\n  height: 400px;\n  overflow-y: scroll;\n  border: 1px solid #BDBDBD;\n  margin-bottom: 20px;\n`;\nconst AddButton = Styled(Link)`\n  font-size: 20px;\n  color: #FFFFFF;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 60px;\n  height: 60px;\n  border-radius: 30px;\n  cursor: pointer;\n  position: absolute;\n  bottom: -30px;\n  background-color: #304FFE;\n  box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.2);\n  text-decoration: none;\n  &:hover {\n    background-color: #1E40FF;\n  }\n  &:active {\n    box-shadow: inset 5px 5px 10px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport const List = () => {\n  const [toDoList, setToDoList] = useState<Array<string>>([]);\n\n  const onDelete = (index: number) => {\n    let list = [...toDoList];\n    list.splice(index, 1);\n    setToDoList(list);\n    localStorage.setItem('ToDoList', JSON.stringify(list));\n  };\n\n  useEffect(() => {\n    const list = localStorage.getItem('ToDoList');\n    if (list) {\n      setToDoList(JSON.parse(list));\n    }\n  }, []);\n\n  return (\n    <Container>\n      <ToDoList>\n        {toDoList.map((todo, index) => (\n          <ToDoItem key={todo}>\n            <Label to={`/detail/${index}`}>{todo}</Label>\n            <Button\n              label=\"삭제\"\n              backgroundColor=\"#FF1744\"\n              hoverColor=\"#F01440\"\n              onClick={() => onDelete(index)}\n            />\n          </ToDoItem>\n        ))}\n      </ToDoList>\n      <AddButton to=\"/add\">+</AddButton>\n    </Container>\n  );\n};\n","import React, { useState } from 'react';\nimport Styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\n\nimport { Button } from 'Components';\n\nconst Container = Styled.div`\n  display: flex;\n`;\nconst Input = Styled.input`\n  font-size: 16px;\n  padding: 10px 10px;\n  border-radius: 8px;\n  border: 1px solid #BDBDBD;\n  outline: none;\n`;\n\nexport const Add = () => {\n  const [toDo, setToDo] = useState('');\n  const { replace } = useHistory();\n\n  const addToDo = (): void => {\n    if (toDo === '') return;\n\n    const list = JSON.parse(localStorage.getItem('ToDoList') || '[]');\n    localStorage.setItem('ToDoList', JSON.stringify([...list, toDo]));\n    replace('/');\n  };\n\n  return (\n    <Container>\n      <Input placeholder=\"할 일을 입력해 주세요\" onChange={(e) => setToDo(e.target.value)} />\n      <Button label=\"추가\" onClick={addToDo} />\n    </Container>\n  );\n};\n","import React from 'react';\nimport Styled from 'styled-components';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { Button } from 'Components';\n\nconst Container = Styled.div`\n  display: flex;\n  background-color: #FFFFFF;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.2);\n  align-items: center;\n  flex-direction: column;\n`;\nconst ToDo = Styled.div`\n  min-width: 350px;\n  height: 350px;\n  overflow-y: auto;\n  border: 1px solid #BDBDBD;\n  margin-bottom: 20px;\n  padding: 10px;\n`;\n\nexport const Detail = () => {\n  const { replace } = useHistory();\n  const { id }: { id: string } = useParams();\n  const toDoList = JSON.parse(localStorage.getItem('ToDoList') || '[]');\n  const toDo = toDoList[id];\n\n  if (toDo === undefined) {\n    replace('/404');\n  }\n\n  const onDelete = () => {\n    let list = [...toDoList];\n    list.splice(Number.parseInt(id), 1);\n    localStorage.setItem('ToDoList', JSON.stringify(list));\n    replace('/');\n  };\n\n  return (\n    <Container>\n      <ToDo>{toDo}</ToDo>\n      <Button label=\"삭제\" backgroundColor=\"#FF1744\" hoverColor=\"#F01440\" onClick={onDelete} />\n    </Container>\n  );\n};\n","import React from 'react';\nimport Styled from 'styled-components';\n\nconst Container = Styled.div`\n  font-size: 20px;\n`;\n\nexport const NotFound = () => {\n  return <Container>Not Found 😿</Container>;\n};\n","import React from 'react';\nimport Styled from 'styled-components';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { PageHeader } from 'Components';\nimport { List, Add, Detail, NotFound } from 'Pages';\n\nconst Container = Styled.div`\n  min-height: 100vh;\n  background-color: #EEEEEE;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nfunction App() {\n  return (\n    <Container>\n      <PageHeader />\n      <Switch>\n        <Route exact path=\"/\">\n          <List />\n        </Route>\n        <Route path=\"/add\">\n          <Add />\n        </Route>\n        <Route path=\"/detail/:id\">\n          <Detail />\n        </Route>\n        <Route>\n          <NotFound />\n        </Route>\n      </Switch>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}